<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Billing Form</title>
    <style>
        /* Basic styling for a clean, modern look */
        
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f9;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        
        .billing-form-container {
            background-color: #ffffff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            width: 500px;
        }
        
        h2 {
            text-align: center;
            color: #333;
        }
        
        label {
            font-weight: bold;
            margin-bottom: 5px;
            display: inline-block;
        }
        
        input {
            width: 100%;
            padding: 8px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
        }
        
        .item-row {
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 10px;
            margin-bottom: 10px;
        }
        
        .item-row input {
            flex: 1;
        }
        
        .item-row button {
            background-color: #ff4d4d;
            color: white;
            border: none;
            padding: 5px 10px;
            font-size: 14px;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s;
        }
        
        .item-row button:hover {
            background-color: #e60000;
        }
        
        .total-container {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        
        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s;
        }
        
        button:hover {
            background-color: #45a049;
        }
        
        .add-item-btn {
            background-color: #008CBA;
        }
        
        .add-item-btn:hover {
            background-color: #007bb5;
        }
        /* Styling for print view */
        
        .print-container {
            display: none;
        }
    </style>
</head>

<body>
    <div class="billing-form-container" id="billing-form-container">
        <h2>Billing Form</h2>
        <form id="billing-form" method="post" action="/submitBill" onsubmit="submitBillingForm(event)">
            <!-- Invoice Number (Auto-generated) -->
            <label for="invoice-number">Invoice Number:</label>
            <input type="text" name="invoice_number" id="invoice-number" readonly><br><br>

            <!-- Customer Name -->
            <label for="customer_name">Customer Name:</label>
            <input type="text" name="customer_name" required><br><br>

            <!-- Customer Email -->
            <label for="customer_email">Customer Email:</label>
            <input type="email" name="customer_email" required><br><br>

            <!-- Items Container -->
            <div id="items-container">
                <div class="item-row">
                    <input type="text" name="items[][name]" placeholder="Item Name" required oninput="updateTotal()">
                    <input type="number" name="items[][quantity]" placeholder="Quantity" required oninput="updateTotal()">
                    <input type="number" name="items[][price]" placeholder="Price (₹)" required oninput="updateTotal()">
                    <button type="button" onclick="removeItem(this)">Remove</button>
                </div>
            </div>

            <button type="button" class="add-item-btn" onclick="addItem()">Add Item</button><br><br>

            <!-- Total -->
            <div class="total-container">
                <label>Total:</label>
                <input type="number" name="total" id="total" readonly>
            </div><br>

            <button type="submit">Submit Billing Information</button>
            <button type="button" onclick="handleNext()">Next</button>
        </form>
    </div>

    <div class="print-container" id="print-container">
        <h2>Billing Information</h2>
        <p><strong>Invoice Number:</strong> <span id="invoice-number-print"></span></p>
        <p><strong>Customer Name:</strong> <span id="customer-name-print"></span></p>
        <p><strong>Customer Email:</strong> <span id="customer-email-print"></span></p>

        <table border="1" cellpadding="5" cellspacing="0" style="width: 100%; margin-top: 20px;">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>Quantity</th>
                    <th>Price (₹)</th>
                    <th>Total (₹)</th>
                </tr>
            </thead>
            <tbody id="items-print"></tbody>
        </table>

        <p><strong>Total Amount:</strong> ₹<span id="total-print"></span></p>

        <button onclick="window.print()">Print</button>
    </div>

    <script>
        const handleNext = () => {
            navigate('/bill2');
        }

        // Generate a dynamic invoice number
        document.getElementById('invoice-number').value = `INV-${Date.now()}`; // Unique based on timestamp

        // Function to add a new item input field
        function addItem() {
            const container = document.getElementById('items-container');
            const newItemRow = document.createElement('div');
            newItemRow.classList.add('item-row');
            newItemRow.innerHTML = `
                <input type="text" name="items[][name]" placeholder="Item Name" required oninput="updateTotal()">
                <input type="number" name="items[][quantity]" placeholder="Quantity" required oninput="updateTotal()">
                <input type="number" name="items[][price]" placeholder="Price (₹)" required oninput="updateTotal()">
                <button type="button" onclick="removeItem(this)">Remove</button>`;
            container.appendChild(newItemRow);
            newItemRow.querySelector('input').focus(); // Auto-focus on the first field of the new row
            updateTotal();
        }

        // Function to remove an item row
        function removeItem(button) {
            const row = button.closest('.item-row');
            row.remove(); // Remove the entire row
            updateTotal(); // Recalculate the total after removal
        }

        // Function to update the total dynamically
        function updateTotal() {
            const itemRows = document.querySelectorAll('.item-row');
            let total = 0;

            itemRows.forEach((row) => {
                const quantityInput = row.querySelector('input[name="items[][quantity]"]');
                const priceInput = row.querySelector('input[name="items[][price]"]');

                const quantity = parseFloat(quantityInput.value) || 0;
                const price = parseFloat(priceInput.value) || 0;

                if (quantity && price) {
                    total += quantity * price;
                }
            });

            document.getElementById('total').value = total.toFixed(2); // Display total with 2 decimal places
        }

        // Function to submit the billing form and display printable view
        async function submitBillingForm(event) {
            event.preventDefault(); // Prevent default form submission

            const form = document.getElementById('billing-form');
            const formData = new FormData(form);
            const data = {
                invoice_number: formData.get('invoice_number'),
                customer_name: formData.get('customer_name'),
                customer_email: formData.get('customer_email'),
                items: [],
                total: parseFloat(formData.get('total'))
            };

            const itemRows = document.querySelectorAll('.item-row');
            itemRows.forEach(row => {
                const item = {
                    name: row.querySelector('input[name="items[][name]"]').value,
                    quantity: parseInt(row.querySelector('input[name="items[][quantity]"]').value),
                    price: parseFloat(row.querySelector('input[name="items[][price]"]').value)
                };
                data.items.push(item);
            });

            // Hide the billing form and show the printable view
            document.getElementById('billing-form-container').style.display = 'none';
            document.getElementById('print-container').style.display = 'block';

            // Display the printable view with the submitted data
            document.getElementById('invoice-number-print').innerText = data.invoice_number;
            document.getElementById('customer-name-print').innerText = data.customer_name;
            document.getElementById('customer-email-print').innerText = data.customer_email;

            const itemsPrintContainer = document.getElementById('items-print');
            itemsPrintContainer.innerHTML = '';
            data.items.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${item.name}</td>
                    <td>${item.quantity}</td>
                    <td>${item.price.toFixed(2)}</td>
                    <td>${(item.quantity * item.price).toFixed(2)}</td>
                `;
                itemsPrintContainer.appendChild(row);
            });

            document.getElementById('total-print').innerText = data.total.toFixed(2);
        }
    </script>
</body>

</html>